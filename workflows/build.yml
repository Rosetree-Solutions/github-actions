# Unique name for this workflow
name: CI

# Definition when the workflow should run. The config below ensures that the workflow runs when
# code is pushed to the main branch, when a pull request is opened or updated, and when the workflow is
# manually triggered.
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - force-app/**
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - main
    paths:
      - force-app/**

# environment configurations
env:
  CUMULUSCI_KEYCHAIN_CLASS: cumulusci.core.keychain.EnvironmentProjectKeychain
  CUMULUSCI_SERVICE_github: ${{ secrets.CUMULUSCI_SERVICE_github }}
  SFDX_HUB_KEY: ${{ secrets.DEVHUB_SFDX_URL }}

jobs:
  beta_test:
    name: "Execute Unit Tests"
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v3
      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
          npm install @salesforce/cli --location=global
          nodeInstallPath=$(npm config get prefix)
          echo "$nodeInstallPath/bin" >> $GITHUB_PATH
          sf --version
      # Store secret for dev hub
      - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
        shell: bash
        run: |
          echo ${{ secrets.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt
          secretFileSize=$(wc -c "./DEVHUB_SFDX_URL.txt" | awk '{print $1}')
          if [ $secretFileSize == 1 ]; then
              echo "Missing DEVHUB_SFDX_URL secret. Is this workflow running on a fork?";
              exit 1;
          fi
      # Authenticate dev hub
      - name: 'Authenticate Dev Hub'
        run: sf org login sfdx-url -f ./DEVHUB_SFDX_URL.txt -a devhub -d
      # Delete secret for dev hub
      - name: 'Delete DEVHUB_SFDX_URL.txt'
        run: rm ./DEVHUB_SFDX_URL.txt
      # Install CCI
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Install CumulusCI
        run: |
          python -m pip install -U pip
          pip install cumulusci
      # Create scratch org and run tests
      - name: Build Org and Execute Tests
        run: |
          cci flow run ci_feature --org beta
      - name: Delete Scratch Org
        if: ${{ always() }}
        run: |
          cci org scratch_delete beta

  trigger-packaging:
    name: "Trigger packaging workflow"
    runs-on: ubuntu-latest
    needs: beta_test
    if: github.event_name != 'pull_request'
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v3

      # Check for package changes using git diff
      - name: 'Check for package changes'
        id: checkForChanges
        run: |
          git fetch origin ${{ github.event.before }} --depth=1
          changedPaths=$( git diff-tree --name-only ${{ github.event.before }} $GITHUB_SHA )
          set +e
          hasChanges='false'
          if [ $(echo "$changedPaths" | grep -c '^force-app') == 1 ]; then
              hasChanges='true'
          fi
          echo "hasChanges=$hasChanges" >> $GITHUB_OUTPUT

      # Trigger packaging workflow if needed
      - name: 'Trigger packaging workflow if needed'
        uses: peter-evans/repository-dispatch@v2
        if: steps.checkForChanges.outputs.hasChanges == 'true'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: start-packaging
          client-payload: '{ "ref": "${{ github.ref }}", "sha": "${{ github.sha }}" }'